# ==========================================
# Docker Compose for GPAlytics Backend
# ==========================================

services:
  # ==========================================
  # FastAPI Application
  # ==========================================
  app:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: gpalytics_app
    environment:
      # Azure SQL Database (cloud-first)
      DATABASE_URL: "${DATABASE_URL}"
      REDIS_URL: "redis://redis:6379"
      JWT_SECRET_KEY: "${JWT_SECRET_KEY}"
      JWT_ALGORITHM: "HS256"
      JWT_EXPIRE_MINUTES: "30"
      DEBUG: "false"
      ENVIRONMENT: "production"
    ports:
      - "8000:8000"
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ../logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/ready"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - gpalytics_network
    restart: unless-stopped

  # ==========================================
  # Development mode with hot-reload
  # ==========================================
  app-dev:
    build:
      context: ..
      dockerfile: docker/Dockerfile.dev
    container_name: gpalytics_app_dev
    environment:
      # Azure SQL Database (same as production for cloud-first development)
      DATABASE_URL: "${DATABASE_URL}"
      REDIS_URL: "redis://redis:6379"
      JWT_SECRET_KEY: "${JWT_SECRET_KEY:-dev-secret-key-change-in-production}"
      JWT_ALGORITHM: "HS256"
      JWT_EXPIRE_MINUTES: "60"
      DEBUG: "true"
      ENVIRONMENT: "development"
      PYTHONPATH: "/app"
    ports:
      - "8001:8000"
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ../app:/app/app:rw
      - ../tests:/app/tests:rw
      - ../logs:/app/logs
      - ../.env:/app/.env:ro
    command: ["uv", "run", "uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload", "--log-level", "debug"]
    networks:
      - gpalytics_network
    profiles:
      - dev

volumes:
  redis_data:
    driver: local

networks:
  gpalytics_network:
    driver: bridge
